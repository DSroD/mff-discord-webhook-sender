{"version":3,"sources":["EmbedComponent.js","MessageComponent.js","App.js","reportWebVitals.js","index.js"],"names":["EmbedComponent","Form","Group","controlId","MessageComponent","state","embeds","addEmbed","setState","Label","srOnly","Control","type","placeholder","as","rows","this","Button","variant","onClick","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAWeA,MARf,WACI,OACI,cAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,SACI,4CC6BGC,E,4MA5BXC,MAAQ,CACJC,OAAQ,I,EAGZC,SAAW,WACP,EAAKC,SAAS,CACVF,OAAO,GAAD,mBAAM,EAAKD,MAAMC,QAAjB,CAAyB,cAAC,EAAD,S,4CAIvC,WACI,OACI,eAACL,EAAA,EAAD,WACA,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,8BAAtB,UACE,cAACF,EAAA,EAAKQ,MAAN,CAAYC,QAAM,EAAlB,8BACA,cAACT,EAAA,EAAKU,QAAN,CAAcC,KAAK,OAAOC,YAAY,aACtC,cAACZ,EAAA,EAAKQ,MAAN,CAAYC,QAAM,EAAlB,qBACA,cAACT,EAAA,EAAKU,QAAN,CAAcG,GAAG,WAAWC,KAAM,EAAGF,YAAY,qCAElDG,KAAKX,MAAMC,OACZ,cAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASH,KAAKT,SAAxC,8B,GAtBmBa,IAAMC,WCYtBC,MAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,uBAAMA,UAAU,WAAhB,UACE,0DACA,8BACE,cAAC,EAAD,YCEKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4c3cfa2b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction EmbedComponent() {\r\n    return (\r\n        <Form.Group controlId=\"mff-discord-webhook.Embed\">\r\n            <p>Embed...</p>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default EmbedComponent;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport EmbedComponent from './EmbedComponent.js'\r\n\r\nclass MessageComponent extends React.Component {\r\n\r\n    state = {\r\n        embeds: []\r\n    }\r\n\r\n    addEmbed = () => {\r\n        this.setState({\r\n            embeds: [...this.state.embeds, <EmbedComponent />]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Form>\r\n            <Form.Group controlId=\"mff-discord-webhook.Message\">\r\n              <Form.Label srOnly>Webhook Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Username\"/>\r\n              <Form.Label srOnly>Message</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={1} placeholder=\"Message (max 2000 characters)\" />\r\n            </Form.Group>\r\n            {this.state.embeds}\r\n            <Button variant=\"primary\" onClick={this.addEmbed}>\r\n              Add Embed\r\n            </Button>\r\n          </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageComponent;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MessageComponent from './MessageComponent.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main className=\"App-main\">\n        <p>MFF Discord webhook stuff</p>\n        <div>\n          <MessageComponent />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}