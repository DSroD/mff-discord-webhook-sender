{"version":3,"sources":["EmbedComponent.js","addimg.svg","MessageComponent.js","App.js","reportWebVitals.js","index.js"],"names":["EmbedComponent","embId","delFunc","useState","setAuthorName","setEmbedTitle","setEmbedDescription","Form","Group","controlId","className","Button","variant","onClick","Card","Body","Control","onChange","e","target","value","type","placeholder","MessageComponent","props","state","embeds","nextId","username","message","avatarURL","deleteEmbed","id","setState","filter","emb","addEmbed","setAvatarURL","url","style","backgroundImage","encodeURI","addimg","bind","title","as","rows","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d89d437.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst EmbedComponent = ({embId, delFunc}) => {\r\n\r\n    const [authorName, setAuthorName] = useState('');\r\n    const [embedTitle, setEmbedTitle] = useState('');\r\n    const [embedDescription, setEmbedDescription] = useState('');\r\n\r\n    return (\r\n        <Form.Group controlId={\"mff-discord-webhook.Embed.\" + embId}>\r\n        <div className=\"embed\">\r\n            <Button className=\"embed-close\" variant=\"outline-dark\" onClick={() => {delFunc(embId)}}>x</Button>\r\n            <Card className=\"embed-card\">\r\n                <Card.Body>\r\n                    <Form.Control onChange={(e) => setAuthorName(e.target.value)} className=\"msg-form-input\" type=\"text\" placeholder=\"Author name\"/>\r\n                    <Form.Control onChange={(e) => setEmbedTitle(e.target.value)} className=\"msg-form-input\" type=\"text\" placeholder=\"Embed title\"/>\r\n                    <Form.Control onChange={(e) => setEmbedDescription(e.target.value)} className=\"msg-form-input\" type=\"text\" placeholder=\"Embed description\"/>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default EmbedComponent;","export default __webpack_public_path__ + \"static/media/addimg.677cedfc.svg\";","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport EmbedComponent from './EmbedComponent.js';\r\nimport addimg from './addimg.svg';\r\n\r\nclass MessageComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteEmbed = this.deleteEmbed.bind(this);\r\n  }\r\n\r\n  state = {\r\n    embeds: [],\r\n    nextId: 0,\r\n    username: '',\r\n    message: '',\r\n    avatarURL: ''\r\n  }\r\n\r\n  deleteEmbed = (id) => {\r\n    this.setState({\r\n      embeds: this.state.embeds.filter(emb => emb.props.embId != id)\r\n    })\r\n  }\r\n\r\n  addEmbed = () => {\r\n    this.setState({\r\n        embeds: [...this.state.embeds, <EmbedComponent embId={this.state.nextId} delFunc={this.deleteEmbed}/>],\r\n        nextId: this.state.nextId + 1\r\n    })\r\n  }\r\n\r\n  setAvatarURL = (url, target) => {\r\n    target.style.backgroundImage = `url(\"${encodeURI(url || addimg)}\")`;\r\n    this.setState({avatarURL: url});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Form className=\"message-form\">\r\n        <Form.Group className=\"main-message\" controlId=\"mff-discord-webhook.Message\">\r\n          <button id=\"avatar\" className=\"avatar-main\" title=\"Set avatar URL\" onClick></button>\r\n          <Form.Control onChange={(e) => this.setState({username: e.target.value})} className=\"msg-form-input\" type=\"text\" placeholder=\"Username\"/>\r\n          <Form.Control onChange={(e) => this.setState({message: e.target.value})} className=\"msg-form-input\" as=\"textarea\" rows={2} placeholder=\"Message (max 2000 characters)\" />\r\n        </Form.Group>\r\n        {this.state.embeds}\r\n        <Button variant=\"primary\" onClick={(e) => this.addEmbed()}>\r\n          Add Embed\r\n        </Button>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessageComponent;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MessageComponent from './MessageComponent.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main className=\"App-main\">\n        <p>MFF Discord webhook stuff</p>\n        <div>\n          <MessageComponent />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}